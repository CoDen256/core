# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - master
  release:
    types: [created]

jobs:

  fetch-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.fetch.outputs.matrix }}
    steps:
      - id: fetch
        run: |
          # This could come from a file, API call, etc.
          MATRIX_JSON='{"include":[{"name":"package1","version":"1.0.0"},{"name":"package2","version":"2.3.4"}]}'
          echo $MATRIX_JSON
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT

  clean:
    runs-on: ubuntu-latest
    needs: fetch-versions
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:  ${{ fromJSON(needs.fetch-versions.outputs.matrix) }}
    steps:
      - name: Build package
        run: |
#          echo "${{ needs.fetch-versions.outputs.matrix }}"
#          echo "${{ fromJSON(needs.fetch-versions.outputs.matrix) }}"
          echo "Building ${{ matrix.name }} version ${{ matrix.version }}"
          # Your build commands here


  build:
    if: false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Org owned packages
        uses: shaneapowell/ghaction-package-admin@v0
        with:
          ghtoken: ${{ github.token }}
          operation: deletePackageVersions
          user: ${{ github.repository_owner }}
          package_type: maven
          package_name:  io.github.coden256.core-aggregator
          include: name 1.0.0
          summary: true
          debug: true
          dryrun: false
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -U -DaltDeploymentRepository=github::https://maven.pkg.github.com/CoDen256/core -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}